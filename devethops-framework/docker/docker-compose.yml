version: '3.8'

services:
  devethops-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: devethops-framework
    ports:
      - "8000:8000"
      - "8080:8080"  # Monitoring dashboard
    environment:
      - DEVETHOPS_ENV=development
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - MONGODB_HOST=mongodb
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../config:/app/config
    depends_on:
      - postgres
      - redis
      - mongodb
    networks:
      - devethops-network
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: devethops-postgres
    environment:
      - POSTGRES_DB=devethops
      - POSTGRES_USER=devethops
      - POSTGRES_PASSWORD=devethops123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - devethops-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: devethops-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - devethops-network
    restart: unless-stopped

  mongodb:
    image: mongo:5
    container_name: devethops-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=devethops
      - MONGO_INITDB_ROOT_PASSWORD=devethops123
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - devethops-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: devethops-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - devethops-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: devethops-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=devethops123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    networks:
      - devethops-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  devethops-network:
    driver: bridge
